# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CookieCreateInput {
  description: String!
  imageUrl: String!
  isShowcased: Boolean!
  name: String!
  price: Float!
  stock: Int!
}

input CookieUpdateInput {
  description: String
  imageUrl: String
  isShowcased: Boolean
  name: String
  price: Float
  stock: Int
}

type Cookies {
  createdAt: DateTime!
  deletedAt: DateTime
  description: String
  id: String!
  imageUrl: String!
  isShowcased: Boolean!
  name: String!
  price: Float!
  stock: Int!
  updatedAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Mutation {
  createCookies(input: CookieCreateInput!): Cookies!
  createOrderItems(input: OrderItemCreateInput!): OrderItems!
  createOrders(input: OrderCreateInput!): Orders!
  createUsers(input: UserCreateInput!): Users!
  removeCookies(id: ID!): Boolean!
  removeOrderItems(id: ID!): Boolean!
  removeOrders(id: ID!): Boolean!
  removeUsers(id: ID!): Boolean!
  updateCookies(id: ID!, input: CookieUpdateInput!): Cookies!
  updateOrderItems(id: ID!, input: OrderItemUpdateInput!): OrderItems!
  updateOrders(id: ID!, input: OrderUpdateInput!): Orders!
  updateUsers(id: ID!, input: UserUpdateInput!): Users!
}

input OrderCreateInput {
  items: [OrderItemCreateInput!]! = []
  orderStatus: OrderStatus! = PENDING
  total: Float!
  userId: String!
}

input OrderItemCreateInput {
  cookieId: String!
  quantity: Float!
}

input OrderItemUpdateInput {
  quantity: Float!
}

type OrderItems {
  cookie: Cookies!
  createdAt: DateTime!
  id: String!
  order: Orders!
  quantity: Float!
}

enum OrderStatus {
  CANCELLED
  COMPLETED
  PENDING
}

input OrderUpdateInput {
  items: [OrderItemCreateInput!]!
  orderStatus: OrderStatus! = PENDING
  total: Float!
}

type Orders {
  createdAt: DateTime!
  deletedAt: DateTime
  id: String!
  items: [OrderItems!]!
  orderStatus: OrderStatus!
  total: Float!
  updatedAt: DateTime
  user: Users!
}

type Query {
  findAllCookies(skip: Float!, take: Float!): [Cookies!]!
  findAllOrderItems(skip: Float!, take: Float!): [OrderItems!]!
  findAllOrders(skip: Float!, take: Float!): [Orders!]!
  findAllUsers(skip: Float!, take: Float!): [Users!]!
  findOneInCookies(id: ID!): Cookies!
  findOneInOrderItems(id: ID!): OrderItems!
  findOneInOrders(id: ID!): Orders!
  findOneInUsers(id: ID!): Users!
  findShowcasedCookies: [Cookies!]
}

input UserCreateInput {
  address: String
  age: Int!
  country: String!
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  role: UserRole! = USER
  zipCode: String
}

enum UserRole {
  ADMIN
  BANNED
  USER
}

input UserUpdateInput {
  address: String
  age: Int
  country: String
  email: String
  firstName: String
  lastName: String
  password: String
  role: UserRole! = USER
  zipCode: String
}

type Users {
  address: String
  age: Int!
  country: String!
  createdAt: DateTime!
  deletedAt: DateTime
  email: String!
  firstName: String!
  id: String!
  lastName: String!
  role: UserRole!
  updatedAt: DateTime
  zipCode: String
}